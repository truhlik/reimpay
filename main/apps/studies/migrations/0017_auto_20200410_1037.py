# Generated by Django 3.0 on 2020-04-10 10:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('studies', '0016_auto_20200409_1235'),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientVisit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Vytvořeno')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Upraveno')),
                ('visit_date', models.DateField(verbose_name='visit date')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_visits', to='studies.Patient', verbose_name='patient')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_visits', to='studies.Study', verbose_name='study')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_visits', to='studies.Visit', verbose_name='visit')),
            ],
            options={
                'verbose_name': 'patient visit',
                'verbose_name_plural': 'patient visits',
            },
        ),
        migrations.CreateModel(
            name='PatientVisitItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Vytvořeno')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Upraveno')),
                ('patient_visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_visit_items', to='studies.PatientVisit')),
                ('visit_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_visit_items', to='studies.VisitItem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='patientvisit',
            name='visit_items',
            field=models.ManyToManyField(blank=True, related_name='patient_visits', through='studies.PatientVisitItem', to='studies.VisitItem'),
        ),
        migrations.CreateModel(
            name='HistoricalPatientVisit',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('visit_date', models.DateField(verbose_name='visit date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='studies.Patient', verbose_name='patient')),
                ('study', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='studies.Study', verbose_name='study')),
                ('visit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='studies.Visit', verbose_name='visit')),
            ],
            options={
                'verbose_name': 'historical patient visit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
